{"ast":null,"code":"var _jsxFileName = \"/home/ani/Documents/food-ordering-app/src/components/Meals/AvailableMeals.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport MealItem from \"./MealItem\";\nimport Card from \"../../UI/Card/Card.js\";\nimport Button from \"../../UI/Button/Button\";\nimport style from \"./AvailableMeals.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_MEALS = [{\n  id: \"m1\",\n  name: \"Sushi\",\n  description: \"Finest fish and veggies\",\n  price: 22.99\n}, {\n  id: \"m2\",\n  name: \"Schnitzel\",\n  description: \"A german specialty!\",\n  price: 16.5\n}, {\n  id: \"m3\",\n  name: \"Barbecue Burger\",\n  description: \"American, raw, meaty\",\n  price: 12.99\n}, {\n  id: \"m4\",\n  name: \"Green Bowl\",\n  description: \"Healthy...and green...\",\n  price: 18.99\n}];\nconst AvailableMeals = props => {\n  _s();\n  const [meals, setMeals] = useState(DUMMY_MEALS);\n  const displayExpenses = meal => {\n    setMeals(DUMMY_MEALS);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: style[\"meals\"],\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n          name: meal.name,\n          description: meal.description,\n          price: meal.price\n        }, meal.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"+Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(AvailableMeals, \"0zMEZZR0ufRUOeLoRBXseRwGx/U=\");\n_c = AvailableMeals;\nexport default AvailableMeals;\nvar _c;\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"names":["React","useState","MealItem","Card","Button","style","jsxDEV","_jsxDEV","DUMMY_MEALS","id","name","description","price","AvailableMeals","props","_s","meals","setMeals","displayExpenses","meal","Fragment","children","className","map","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["/home/ani/Documents/food-ordering-app/src/components/Meals/AvailableMeals.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport MealItem from \"./MealItem\";\nimport Card from \"../../UI/Card/Card.js\";\nimport Button from \"../../UI/Button/Button\";\nimport style from \"./AvailableMeals.module.css\";\n\nconst DUMMY_MEALS = [\n  {\n    id: \"m1\",\n    name: \"Sushi\",\n    description: \"Finest fish and veggies\",\n    price: 22.99,\n  },\n  {\n    id: \"m2\",\n    name: \"Schnitzel\",\n    description: \"A german specialty!\",\n    price: 16.5,\n  },\n  {\n    id: \"m3\",\n    name: \"Barbecue Burger\",\n    description: \"American, raw, meaty\",\n    price: 12.99,\n  },\n  {\n    id: \"m4\",\n    name: \"Green Bowl\",\n    description: \"Healthy...and green...\",\n    price: 18.99,\n  },\n];\n\nconst AvailableMeals = (props) => {\n  const [meals, setMeals] = useState(DUMMY_MEALS);\n  const displayExpenses = (meal) => {\n    setMeals(DUMMY_MEALS);\n  };\n\n  return (\n    <React.Fragment>\n      <Card className={style[\"meals\"]}>\n          <ul>\n            {meals.map((meal) => (\n              <MealItem\n                key={meal.id}\n                name={meal.name}\n                description={meal.description}\n                price={meal.price}\n              />\n            ))}\n            <Button type=\"submit\">+Add</Button>\n          </ul>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default AvailableMeals;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,IAAI,MAAM,uBAAuB;AACxC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,KAAK,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,WAAW,GAAG,CAClB;EACEC,EAAE,EAAE,IAAI;EACRC,IAAI,EAAE,OAAO;EACbC,WAAW,EAAE,yBAAyB;EACtCC,KAAK,EAAE;AACT,CAAC,EACD;EACEH,EAAE,EAAE,IAAI;EACRC,IAAI,EAAE,WAAW;EACjBC,WAAW,EAAE,qBAAqB;EAClCC,KAAK,EAAE;AACT,CAAC,EACD;EACEH,EAAE,EAAE,IAAI;EACRC,IAAI,EAAE,iBAAiB;EACvBC,WAAW,EAAE,sBAAsB;EACnCC,KAAK,EAAE;AACT,CAAC,EACD;EACEH,EAAE,EAAE,IAAI;EACRC,IAAI,EAAE,YAAY;EAClBC,WAAW,EAAE,wBAAwB;EACrCC,KAAK,EAAE;AACT,CAAC,CACF;AAED,MAAMC,cAAc,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAACO,WAAW,CAAC;EAC/C,MAAMU,eAAe,GAAIC,IAAI,IAAK;IAChCF,QAAQ,CAACT,WAAW,CAAC;EACvB,CAAC;EAED,oBACED,OAAA,CAACP,KAAK,CAACoB,QAAQ;IAAAC,QAAA,eACbd,OAAA,CAACJ,IAAI;MAACmB,SAAS,EAAEjB,KAAK,CAAC,OAAO,CAAE;MAAAgB,QAAA,eAC5Bd,OAAA;QAAAc,QAAA,GACGL,KAAK,CAACO,GAAG,CAAEJ,IAAI,iBACdZ,OAAA,CAACL,QAAQ;UAEPQ,IAAI,EAAES,IAAI,CAACT,IAAK;UAChBC,WAAW,EAAEQ,IAAI,CAACR,WAAY;UAC9BC,KAAK,EAAEO,IAAI,CAACP;QAAM,GAHbO,IAAI,CAACV,EAAE;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAKf,CAAC,eACFpB,OAAA,CAACH,MAAM;UAACwB,IAAI,EAAC,QAAQ;UAAAP,QAAA,EAAC;QAAI;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAChC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACQ;AAErB,CAAC;AAACZ,EAAA,CAvBIF,cAAc;AAAAgB,EAAA,GAAdhB,cAAc;AAyBpB,eAAeA,cAAc;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}